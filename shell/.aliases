#!/usr/bin/env sh

alias randstr="cat /dev/urandom | env LC_ALL=C tr -cd 'A-Za-z0-9' | head -c"
alias randhex="cat /dev/urandom | env LC_ALL=C tr -cd 'a-f0-9' | head -c"
alias tiga='tig --all'
alias arc='OVERCOMMIT_DISABLE=1 arc'
alias q='ag -Q'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias sudo="sudo "
alias workoff="deactivate" # opposite of virtualenv's "workon <env>"
alias code="code-insiders"

command -v hub > /dev/null && eval "$(hub alias -s)"

function cdws() {
cd $HOME/workspace/$1
}

function mkws() {
mkdir -p $HOME/workspace/$1
}

# TODO: Autocompletion in bash?
command -v compctl > /dev/null && compctl -/ -W $HOME/workspace cdws
command -v compctl > /dev/null && compctl -/ -W $HOME/workspace mkws

# Serve an HTTP server from the current directory
function serve() {
dir="${1:-.}"
port="${2:-3000}"
ruby -run -e httpd $dir -p $port
}

function jql() {
arg="${1:-.}"
jq -C "$arg" | less -r
}

function showcert() {
domain="${1}"
if [[ "${domain}" != *":"* ]]; then
  domain="${domain}:443"
fi
openssl s_client -connect "${domain}" </dev/null 2>/dev/null | openssl x509 -noout -text
}

###################################################################
#                         SSH-AGENT STUFF                         #
# (found and slightly adapted from http://superuser.com/a/141241) #
###################################################################
function sshagent_findsockets() {
find /tmp /var/folders -uid $(id -u) -type s -name agent.\* 2> /dev/null
}

function sshagent_testsocket {
if ! command -v ssh-add > /dev/null; then
    echo "ssh-add is not available; agent testing aborted"
    return 1
fi

if [ -n "$1" ]; then
    export SSH_AUTH_SOCK=$1
fi

if [ -z "$SSH_AUTH_SOCK" ]; then
    return 2
fi

if [ -S $SSH_AUTH_SOCK ]; then
    ssh-add -l > /dev/null 2> /dev/null
    if [ $? = 2 ]; then
        echo "Socket $SSH_AUTH_SOCK is dead! Deleting!"
        rm -f $SSH_AUTH_SOCK
        return 4
    else
        echo "Found ssh-agent $SSH_AUTH_SOCK"
        return 0
    fi
else
    echo "$SSH_AUTH_SOCK is not a socket!"
    return 3
fi
}

function sshagent_init {
# ssh agent sockets can be attached to a ssh daemon process or an
# ssh-agent process
AGENTFOUND=0

# Attempt to find and use the ssh-agent in the current environment
if sshagent_testsocket; then AGENTFOUND=1; fi

# if there is no agent in the environment, search /tmp for possible
# agents to reuse before starting a fresh ssh-agent process
if [ $AGENTFOUND = 0 ]; then
    for agentsocket in $(sshagent_findsockets); do
        if [ $AGENTFOUND != 0 ]; then break; fi
        if sshagent_testsocket $agentsocket; then AGENTFOUND=1; fi
    done
fi

# if at this point, we still haven't located an agent, it's time to
# start a new one
if [ $AGENTFOUND = 0 ]; then
    eval "$(ssh-agent -s)"
fi

# Clean up
unset AGENTFOUND
unset agentsocket

# Finally, show what keys are currently in the agent
ssh-add -l
}

alias sagent="sshagent_init"

